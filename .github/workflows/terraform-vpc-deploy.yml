name: Terraform VPC + GKE Deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  id-token: write

env:
  TF_IN_AUTOMATION: "true"
  TF_INPUT: "false"
  TF_CLI_ARGS_apply: "-auto-approve"

jobs:
  terraform:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        workdir:
          - environment/production/vpc/hhc-shared-prd-vpc
          - environment/production/gke

    name: Apply (${{ matrix.workdir }})

    defaults:
      run:
        working-directory: ${{ matrix.workdir }}

    env:
      PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}

    steps:
      - uses: actions/checkout@v4

      - name: Authenticate to GCP (Service Account JSON)
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Format Check
        run: terraform fmt -check -recursive

      - name: Terraform Init (GCS backend)
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -var="project_id=${PROJECT_ID}" -out=tfplan.out

      - name: Upload plan on PRs
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: tf-plan-${{ matrix.workdir##*/ }}
          path: ${{ matrix.workdir }}/tfplan.out
        continue-on-error: true

      - name: Terraform Apply (push to main only)
        if: github.event_name == 'push'
        run: terraform apply -var="project_id=${PROJECT_ID}" -auto-approve tfplan.out
